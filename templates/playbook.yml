---
- name: Install Nginx and Docker
  hosts: web_servers
  become: yes
  gather_facts: yes
  
  tasks:
    - name: Wait for SSH to be available
      wait_for_connection:
        delay: 5
        timeout: 300
    
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
          - git
        state: present
    
    - name: Install Nginx
      apt:
        name: nginx
        state: present
    
    - name: Start and enable Nginx
      systemd:
        name: nginx
        state: started
        enabled: yes
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    
    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes
    
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
    
    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes
    
    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
    
    - name: Remove existing backend directory if present
      file:
        path: /home/ubuntu/backend
        state: absent
      become_user: ubuntu
    
    - name: Clone backend repository from GitHub
      git:
        repo: https://github.com/sleemkeen/backend-server.git
        dest: /home/ubuntu/backend
        version: main
        force: yes
      become_user: ubuntu

    - name: Install Node.js and npm
      apt:
        name:
          - nodejs
          - npm
        state: present
        update_cache: yes

    - name: Install Node.js dependencies
      shell: npm install
      args:
        chdir: /home/ubuntu/backend
      become_user: ubuntu
    
    - name: Stop existing backend container
      shell: docker compose down
      args:
        chdir: /home/ubuntu/backend
      ignore_errors: yes
      become_user: ubuntu
    
    - name: Build and start backend with Docker Compose
      shell: docker compose up -d --build
      args:
        chdir: /home/ubuntu/backend
      become_user: ubuntu
    
    - name: Show docker compose logs
      shell: docker compose logs
      args:
        chdir: /home/ubuntu/backend
      become_user: ubuntu
      register: docker_logs
    
    - name: Display docker logs
      debug:
        msg: "{{ docker_logs.stdout_lines }}"
    
    - name: Check if container is running
      shell: docker compose ps
      args:
        chdir: /home/ubuntu/backend
      become_user: ubuntu
      register: docker_ps
    
    - name: Display running containers
      debug:
        msg: "{{ docker_ps.stdout_lines }}"
    
    - name: Wait for backend to be ready
      wait_for:
        host: 127.0.0.1
        port: 3000
        delay: 10
        timeout: 120
        state: started
      delegate_to: "{{ inventory_hostname }}"
    
    - name: Configure Nginx as reverse proxy
      copy:
        dest: /etc/nginx/sites-available/backend
        content: |
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        owner: root
        group: root
        mode: '0644'
    
    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
    
    - name: Enable backend site
      file:
        src: /etc/nginx/sites-available/backend
        dest: /etc/nginx/sites-enabled/backend
        state: link
    
    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test
      changed_when: false
    
    - name: Reload Nginx
      systemd:
        name: nginx
        state: reloaded
    
    - name: Verify backend is running
      uri:
        url: http://localhost:3000/health
        return_content: yes
      register: backend_test
    
    - name: Display backend response
      debug:
        msg: "Backend is running: {{ backend_test.json.message }}"
    
    - name: Test Nginx proxy
      uri:
        url: http://localhost
        return_content: yes
      register: proxy_test
    
    - name: Display proxy response
      debug:
        msg: "Nginx proxy is working: {{ proxy_test.json.message }}"

